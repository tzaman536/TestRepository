
@{
    ViewBag.Title = "AddProfile";
}

<div class="page-title">Please fill this form and click submit</div>
<div class="demo-section k-content">
    <div id="tickets">
        <form id="ticketsForm">
            <ul id="fieldlist">
                <li>
                    <label for="fullname" class="required">Your Name</label>
                    @(Html.Kendo().TextBox()
                              .Name("playerName")
                              .HtmlAttributes(new { placeholder = "Your Name", required = "required", validationmessage = "Enter {0}", style = "width:220px" })
                    )
                </li>
                <li>
                    <label for="time">Player Type</label>
                    @(Html.Kendo()
                              .DropDownList()
                              .Name("playerLevel")
                              .HtmlAttributes(new { required = "required", data_required_msg = "Please select your level", style = "width: 220px" })
                              .BindTo(new[] {
                                  new SelectListItem { Text="Beginner" },
                                  new SelectListItem { Text="Intermediate" },
                                  new SelectListItem { Text="Advanced" },
                                  new SelectListItem { Text="Dare you to play" },
                              })
                    )
                    <span class="k-invalid-msg" data-for="time"></span>
                </li>
                <li>
                    <label for="email" id="email" class="required">Email :</label> <label id="emailValue" >Email :</label>
                    @*@(Html.Kendo().TextBox()
                              .Name("email")
                              .HtmlAttributes(new { placeholder = "e.g. myname@example.net", required = "required",  type = "email", data_email_msg = "Email format is not valid", style = "width: 220px;" })

                    )*@
                </li>
                <li>
                    <label for="tel" class="required">Phone</label>
                    @(Html.Kendo().MaskedTextBox()
                              .Name("phone")
                              .Mask("(999) 000-0000")
                              .HtmlAttributes(new { placeholder = "Enter your phone number",  required = "required", type = "tel", validationmessage = "Enter a 10 digit number", style = "width: 220px;" })
                    )


                </li>
                <li class="accept">
                    <label>Available to all</label>
                    <input type="checkbox" id="playWithAnyone"  name="playWithAnyone" required validationMessage="This is required" /> I'm available to play will all
                </li>
                <li class="confirm">
                    <button class="k-button k-primary" type="submit">Submit</button>
                </li>
                <li class="status">
                </li>
            </ul>
        </form>
    </div>
</div>
<script>

    $(document).ready(function () {
        var cu = getCurrencyUserInformation();
        $("#playerName").val(cu.Name).change();
        $("#phone").val(cu.Phone).change();
        document.getElementById("emailValue").innerText = cu.Email;
        $("#playerLevel").data("kendoDropDownList").select(function (dataItem) {
            return dataItem.Text === cu.PlayerLevel;
        });
        $("#playWithAnyone").prop('checked', cu.PlayWithAnyone);

        
    });



    function getCurrencyUserInformation() {
        var obj = {
                Name:'Unknown',
                Phone:'5551234567',
                PlayWithAnyone: true,
                Email: 'Unknown',
                PlayerLevel: 'Unknown'
        };

        $.ajax({
            type: "POST",
            traditional: true,
            url: '@Url.Action("GetCurrencyUserInformation", "TennisNetwork")',
            async: false,
            data: null,
            dataType: "json",
            beforeSend: function (xhr) {
            },
            success: function (response, textStatus, jqXHR) {
                //alert(response.message.Email);
                obj.Email = response.message.Email;
                obj.Phone = response.message.Phone;
                obj.Name = response.message.Name;
                obj.PlayWithAnyone = response.message.PlayWithAnyone;
                obj.PlayerLevel = response.message.PlayerLevel;
            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Couldn't get current user information");
                return null;
            }
        });

        return obj;
    }

    $(function () {
        var validator = $("#ticketsForm").kendoValidator().data("kendoValidator");
        var status = $(".status");

        $("form").submit(function (event) {
            event.preventDefault();
            if (validator.validate()) {


                alert(document.getElementById("playWithAnyone").value);

                var playWithAnyone = document.getElementById("playWithAnyone").value;

                if (playWithAnyone == null || playWithAnyone == "")
                    playWithAnyone = false;
                else
                    playWithAnyone = true;

                var inputPlayer = {
                    "Name": document.getElementById("playerName").value,
                    "Email": document.getElementById("email").value,
                    "Phone": document.getElementById("phone").value,
                    "PlayerLevel": document.getElementById("playerLevel").value,
                    "PlayWithAnyone": playWithAnyone
                };

                var parms = {
                    inputPlayer: JSON.stringify(inputPlayer)
                };




                $.ajax({
                    type: "POST",
                    traditional: true,
                    url: '@Url.Action("AddMyProfile", "TennisNetwork")',
                    async: false,
                    data: parms,
                    dataType: "json",
                    beforeSend: function (xhr) {
                    },
                    success: function (response, textStatus, jqXHR) {
                        //document.getElementById("idTotalCharge").value = response.message.Charge;
                        //alert(response.message);
                        status.text(response.message).removeClass("invalid").addClass("valid");


                    },
                    error: function (XMLHttpRequest, textStatus, errorThrown) {
                        alert("Error found during execution");
                    }
                });


            } else {
                status.text("Oops! There is invalid data in the form.")
                    .removeClass("valid")
                    .addClass("invalid");
            }
        });
    });

</script>
<style>
    #fieldlist {
        margin: 0;
        padding: 0;
    }

        #fieldlist li {
            list-style: none;
            padding-bottom: .7em;
            text-align: left;
        }

        #fieldlist label {
            display: block;
            padding-bottom: .3em;
            font-weight: bold;
            text-transform: uppercase;
            font-size: 12px;
            color: #444;
        }

        #fieldlist li.status {
            text-align: center;
        }

        #fieldlist li .k-widget:not(.k-tooltip),
        #fieldlist li .k-textbox {
            margin: 0 5px 5px 0;
        }

    .confirm {
        padding-top: 1em;
    }

    .valid {
        color: green;
    }

    .invalid {
        color: red;
    }

    #fieldlist li input[type="checkbox"] {
        margin: 0 5px 0 0;
    }

    span.k-widget.k-tooltip-validation {
        display: inline-block;
        width: 160px;
        text-align: left;
        border: 0;
        padding: 0;
        margin: 0;
        background: none;
        box-shadow: none;
        color: red;
    }

    .k-tooltip-validation .k-warning {
        display: none;
    }
</style>




