
@{
    ViewBag.Title = "System Data";
}

<h2>Sections</h2>

<div>
    <h3 id="updateStatus">Manage store sections:</h3>
</div>


<div>
    <div id="allProducts" style="min-width:400px; max-width:900px">
        @(Html.Kendo().Grid<AmzModel.Section>()
                .Name("SectionGrid")
                .Columns(columns =>
                {
                    columns.Bound(p => p.SectionName).Width(100);
                    columns.Bound(p => p.SectionDescription).Width(100);
                    columns.Bound(p => p.AddDate).Width(255).Format("{0:MM/dd/yyyy hh:mm tt}");
                    columns.Bound(p => p.AddedBy).Width(85);
                    columns.Bound(p => p.ModifiedDate).Width(85).Format("{0:MM/dd/yyyy hh:mm tt}");
                    columns.Bound(p => p.ModifiedBy).Width(85);
                    columns.Command(command => command.Destroy()).Width(110);

                })
                .ToolBar(toolbar =>
                {
                    toolbar.Create();
                    toolbar.Save();
                })
                .Editable(editable => editable.Mode(GridEditMode.InCell))
                //.Pageable()
                .Filterable()
                .Navigatable()
                .Sortable()
                .Selectable(selectable => selectable
                        .Mode(GridSelectionMode.Single)
                        .Type(GridSelectionType.Row))
                //.Scrollable()
                .Events(events => events.Change("onChange"))
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .Batch(true)
                    .PageSize(1000)
                    .ServerOperation(false)
                    .Events(events => events.Error("errorHandler").Sync("sync_handler").RequestEnd("onRequestEnd"))
//                    .Model(model => model.Id(p => p.SectionID))
                    .Model(model =>
                    {
                        model.Id(p => p.SectionID);
                        model.Field(p => p.SectionName).Editable(true);
                        model.Field(p => p.SectionDescription).Editable(true);
                        model.Field(p => p.AddDate).Editable(false);
                        model.Field(p => p.AddedBy).Editable(false);
                        model.Field(p => p.ModifiedDate).Editable(false);
                        model.Field(p => p.ModifiedBy).Editable(false);
                    })
                    .Create("Section_Create", "ReferenceData")
                    .Read("Section_Read", "ReferenceData")
                    .Update("Section_Update", "ReferenceData")
                    .Destroy("Section_Destroy", "ReferenceData")
                    )
        )
    </div>

<script>
    function errorHandler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    function onChange(arg) {
        //alert("Changed");
    }

    function sync_handler(e)
    {
    }

    function onRequestEnd(e) {

        //alert(e.type);
        if (e.type == "update" && !e.response.Errors) {
            alert("Section updated");
        }

        if (e.type == "create" && !e.response.Errors) {
            alert("Section added");
        }

        if (e.type == "destroy" && !e.response.Errors) {
            alert("Section deleted");
        }
        
    }

</script>


<style>
    .k-grid {
        font-size: 10px;
    }

        .k-grid td {
            line-height: 2em;
        }
</style>