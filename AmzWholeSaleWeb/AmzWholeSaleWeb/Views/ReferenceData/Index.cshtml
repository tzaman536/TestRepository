
@{
    ViewBag.Title = "System Data";
}

<h2>Sections</h2>

<div>
    <h3 id="updateStatus">Manage store sections:</h3>
</div>


<div>
    @(Html.Kendo().Grid<AmzModel.Section>()
          //.Name("Grid").Events(e => e.FilterMenuInit("filterMenuInit"))
          .Name("Grid")
      .Columns(columns =>
      {
          columns.ForeignKey(p => p.SectionName, (System.Collections.IEnumerable)ViewData["SourceList"], "Id", "Status").Title("Category");
          columns.Bound(p => p.SectionDescription).Width(100);
          columns.Bound(p => p.AddDate).Width(255);
          columns.Bound(p => p.AddedBy).Width(85);
          columns.Bound(p => p.ModifiedDate).Width(85);
          columns.Bound(p => p.ModifiedBy).Width(85);
          columns.Command(c =>
          {
              c.Edit();
              c.Destroy();
          });
      })
        .ToolBar(tools =>
        {
            tools.Create();
        })
        .Sortable().Filterable()
        .Pageable().Scrollable(scrollable => scrollable.Height(800)).Reorderable(reorderable => reorderable.Columns(true)).Resizable(resizable => resizable.Columns(true))
        .DataSource(dataSource => dataSource
            .Ajax()
            .Events(events => events.Error("errorHandler"))
            .PageSize(1000)
            .Model(model =>
            {
                model.Id(p => p.SectionID);
                model.Field(p => p.SectionID).Editable(false);
                model.Field(p => p.SectionName).Editable(true);
                model.Field(p => p.SectionDescription).Editable(true);
                model.Field(p => p.AddDate).Editable(false);
                model.Field(p => p.AddedBy).Editable(false);
                model.Field(p => p.ModifiedDate).Editable(false);
                model.Field(p => p.ModifiedBy).Editable(false);

            })
                    .Create(update => update.Action("Section_Create", "ReferenceData"))
                    .Read(read => read.Action("Section_Read", "ReferenceData"))
                    .Update(update => update.Action("Section_Update", "ReferenceData"))
                    .Destroy(update => update.Action("Section_Destroy", "ReferenceData"))
        )
    )




</div>

<script>
    function errorHandler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function () {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }

    function onChange(arg) {
        //alert("Changed");
    }

    function sync_handler(e)
    {
    }

    function onRequestEnd(e) {

        if (e.type == "update" && !e.response.Errors) {
            alert("Section updated");
        }

        if (e.type == "create" && !e.response.Errors) {
            alert("Section added");
        }

        if (e.type == "destroy" && !e.response.Errors) {
            alert("Section deleted");
        }
        
    }

</script>


<style>
    .k-grid {
        font-size: 10px;
    }

        .k-grid td {
            line-height: 2em;
        }
</style>