@{
    ViewBag.Title = "ManageProduct";
}

<div id="userMessage">
    <h5 style="color:blue">@ViewBag.Message </h5>
</div>
<div style="widows: 100%; display:table;">
    <div style="display:table-row">
        <div id="idProductUploadForm" style="min-width:900px; display:table-cell;">
            <div id="productImage">
                <img id="selectedItemImage" src="@Url.Content("~/content/products/1.jpg")" />
            </div>
            <br />
            <div id="uploadButton">
                @using (Html.BeginForm("UploadImage", "ProductAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
                {
                    <input type="file" id="inputFile" name="file" />
                    <input type="hidden" id="idProductID" name="productID" value="0" />
                        <br />
                        <input id="btn_submitFile" type="submit" value="Upload Image" />
                }
            </div>
            <br />
            <div id="allProducts">
                @(Html.Kendo().Grid<AmzModel.AmzProduct>()
    .Name("ProductGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ProductName).Width(100);
        columns.Bound(p => p.ProductDescription).Width(100);
        columns.Bound(p => p.ProductLongDescription).Width(255);
        columns.Bound(p => p.UnitPrice).Width(85);
        columns.Bound(p => p.UnitsInStock).Width(85);
        columns.Bound(p => p.UnitsOnOrder).Width(85);
        columns.Bound(p => p.ImageUploadSuccessful).Width(50);
        columns.Bound(p => p.Discontinued).Width(50);
        columns.Command(command => command.Destroy()).Width(110);
    })
    .ToolBar(toolbar =>
    {
        //toolbar.Create();
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Navigatable()
    .Sortable()
    .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
    //.Scrollable()
    .Events(events => events.Change("onChange"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(3)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.ProductID))
                        .Create("Editing_Create", "ProductAdmin")
                        .Read("Editing_Read", "ProductAdmin")
                        .Update("Editing_Update", "ProductAdmin")
                        .Destroy("Editing_Destroy", "ProductAdmin")
                    )
                )
            </div>

        </div>
        <div style="max-width:300px; display:table-cell;">
            @Html.Partial("AdminMenu")
        </div>
    </div>
</div>

<script type="text/javascript">

    $(document).ready(function () {
        validateUploadForm();    
      
    });

    function validateUploadForm() {


        $("#btn_submitFile").bind("click", function () {

            if ($("#inputFile").get(0).files.length === 0) {
                alert("Pick an image file");
                return false;
            }


            document.getElementById("userMessage").innerHTML = "Uploading file. Please wait.....";
            
            window.setInterval(function () {
                // 'blink' class is toggled into 'P' tag between the interval of 500 ms
                $("#userMessage").toggleClass('blink');
            }, 500);

            //var productName = document.getElementById("idProductName").value;
            //var productDescription = document.getElementById("idProductDescription").value;
            //var unitPrice = document.getElementById("idUnitPrice").value;
            //var productLongDescription = document.getElementById("idProductLongDescription").value;

            //if(productName == '' || productName == "Product Name")
            //{
            //    alert("Please type product name");
            //    return false;
            //}



        });
    }
    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }



    function onChange(arg) {
        var grid = $("#ProductGrid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());

        document.getElementById("selectedItemImage").src = "@Url.Content("~/content/products/{0}?{1}")".format(selectedItem.SmallImageId, new Date().getTime());

        document.getElementById("idProductID").value = selectedItem.ProductID;

    }



</script>

<style>
    .k-grid {
        font-size: 10px;
    }
    .k-grid td {
        line-height: 2em;
    }
</style>