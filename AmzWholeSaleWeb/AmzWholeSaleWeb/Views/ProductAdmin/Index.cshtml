
@{
    ViewBag.Title = "Product Admin";
}

<h2>Product Admin </h2>
<div id="test" class="pad" contenteditable="true">
    <div id="productImage" class="fif">
        @*<img id="selectedItemImage" src="@Url.Content("~/content/products/1.jpg")" />*@
        <img id="selectedItemImage" src="@Url.Content("~/content/products/1.jpg")" />

    </div>    
    
    <div id="uploadButton" class="fif">
            @using (Html.BeginForm("UploadImage", "ProductAdmin", FormMethod.Post, new { enctype = "multipart/form-data" }))
            {
                <input type="file" name="file" />
                <input type="hidden" id="idProductID" name="productID" value="0" />
                <br />
                <input id="btn_submitFile" type="submit" value="Upload Image" />

                <br />

                <h3>@ViewBag.Message</h3>
            }
    </div>
    
</div>

<br />
<div id="allProducts">
    @(Html.Kendo().Grid<AmzModel.AmzProduct>()
    .Name("ProductGrid")
    .Columns(columns =>
    {
        columns.Bound(p => p.ProductName);
        columns.Bound(p => p.ProductDescription);
        columns.Bound(p => p.UnitPrice).Width(140);
        columns.Bound(p => p.UnitsInStock).Width(140);
        columns.Bound(p => p.UnitsOnOrder).Width(140);
        columns.Bound(p => p.ImageUploadSuccessful).Width(140);
        columns.Bound(p => p.Discontinued).Width(100);
        columns.Command(command => command.Destroy()).Width(110);
    })
    .ToolBar(toolbar =>
    {
        toolbar.Create();
        toolbar.Save();
    })
    .Editable(editable => editable.Mode(GridEditMode.InCell))
    .Pageable()
    .Navigatable()
    .Sortable()
    .Selectable(selectable => selectable
            .Mode(GridSelectionMode.Single)
            .Type(GridSelectionType.Row))
    //.Scrollable()
    .Events(events => events.Change("onChange"))
    .DataSource(dataSource => dataSource
        .Ajax()
        .Batch(true)
        .PageSize(7)
        .ServerOperation(false)
        .Events(events => events.Error("error_handler"))
        .Model(model => model.Id(p => p.ProductID))
        .Create("Editing_Create", "ProductAdmin")
        .Read("Editing_Read", "ProductAdmin")
        .Update("Editing_Update", "ProductAdmin")
        .Destroy("Editing_Destroy", "ProductAdmin")
    )
    )
</div>
<script type="text/javascript">


    function error_handler(e) {
        if (e.errors) {
            var message = "Errors:\n";
            $.each(e.errors, function (key, value) {
                if ('errors' in value) {
                    $.each(value.errors, function() {
                        message += this + "\n";
                    });
                }
            });
            alert(message);
        }
    }



    function onChange(arg) {
        var grid = $("#ProductGrid").data("kendoGrid");
        var selectedItem = grid.dataItem(grid.select());

        document.getElementById("selectedItemImage").src = "@Url.Content("~/content/products/{0}.jpg")".format(selectedItem.ProductID);
        document.getElementById("idProductID").value = selectedItem.ProductID;

    }



</script>

<style>
    .pad {
    background-color: #eee;
    padding: 4px;
    overflow:hidden  /*  first */
    }
    .fif {
        display: inline-block;
        margin: 0;
        padding: 4px 8px;
        float:left  /* second part */
    }
</style>