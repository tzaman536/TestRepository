
@{
    ViewBag.Title = "Job Ticket";
}

<h2>Add Job Ticket</h2>

<div style="display:table;">
    <div style="display:table-row">
        <div id="idProductUploadForm" style="min-width:900px; display:table-cell;">
            <dl>
                <dt>
                        Client:
                </dt>
                <dd>
                    @(Html.Kendo().DropDownList()
                      .Name("clients")
                      .DataTextField("ClientName")
                      .DataValueField("ClientID")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetClientNames", "ReferenceData");
                          });
                      })
                      .Events(e =>
                        {
                            e.Select("onSelectClientName");
                        })

                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                </dd>
                <dt>
                    Job Date:
                </dt>
                <dd>
                    @(Html.Kendo().DatePicker()
                      .Name("datepickerJobDate")
                      .Value(DateTime.Today)
                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                </dd>
                <dt>
                    Delivery Date:
                </dt>
                <dd>
                    @(Html.Kendo().DatePicker()
                      .Name("datepickerDeliveryDate")
                      .Value(DateTime.Today)
                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                </dd>

                <dt>Quantity:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idQuantity" name="Quantity" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)" required /></dd>
                <dt>Weight:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idWeight" name="Weight" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)" required /></dd>
                <dt>Base Pickup Charge:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idBasePickupCharge" name="Base PU" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)" required /></dd>
                <dt>Milage:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idMilage" name="Milage" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)"/></dd>
                <dt>Toll:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idToll" name="Toll" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)" required /></dd>
                <dt>Fuel Surcharge:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idFuelSurcharge" name="Fuel Charge" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)" required /></dd>
                <dt>Misc. Service:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idMiscService" name="Misc. Service" data-role='maskedtextbox' onchange="calcTotalCharge(this.value)"/></dd>
                <dt>Total Charge:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idTotalCharge" name="Total Charge" data-role='maskedtextbox' /></dd>
                <dt>Waiting Time:</dt><dd><input type="number" class="k-textbox numberOfUnits" id="idWaitingTime" name="Wait Time" data-role='maskedtextbox' /></dd>
                <dt>Pickup From:</dt><dd>
                    @(Html.Kendo().DropDownList()
                      .Name("pickUpLocation")
                      .DataTextField("Location")
                      .DataValueField("LocationID")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetPickupAndDeliveryLocation", "ReferenceData");
                          });
                      })
                      .Events(e =>
                        {
                            e.Select("onSelectPickupFrom");
                        })

                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                    <textarea id="idPickupFrom" name="Pickup From" class="k-textbox addressArea" rows="4" cols="20" required></textarea>
                </dd>
                <dt>Deliver To:</dt>
                <dd>
                    @(Html.Kendo().DropDownList()
                      .Name("deliveryLocation")
                      .DataTextField("Location")
                      .DataValueField("LocationID")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetPickupAndDeliveryLocation", "ReferenceData");
                          });
                      })
                      .Events(e =>
                        {
                            e.Select("onSelectDeliverTo");
                        })

                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                    <textarea id="idDeliverTo" name="Deliver To" class="k-textbox addressArea" rows="4" cols="20" required></textarea>
                </dd>
                <dt>Instructions:</dt><dd><input type="text" class="k-textbox instruction" id="idInstruction" name="instruction"  /></dd>
                <dt>Service Type:</dt>
                <dd>
                    @(Html.Kendo().DropDownList()
                      .Name("serviceTypeDDL")
                      .DataTextField("Name")
                      .DataValueField("ServiceTypeID")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetSeviceTypes", "ReferenceData");
                          });
                      })
                      .Events(e =>
                        {
                            e.Select("onSelectServiceType");
                        })

                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                </dd>
                <dt>Delivery Agent:</dt>
                <dd>
                    @(Html.Kendo().DropDownList()
                      .Name("deliveryAgentDDL")
                      .DataTextField("Name")
                      .DataValueField("DeliveryAgentID")
                      .DataSource(source =>
                      {
                          source.Read(read =>
                          {
                              read.Action("GetDeliveryAgent", "ReferenceData");
                          });
                      })
                      .Events(e =>
                        {
                            e.Select("onSelectDeliveryAgent");
                        })

                      .HtmlAttributes(new { style = "width: 250px;" })
                    )
                </dd>
                <dt>POD:</dt><dd><input type="text" class="k-textbox instruction" id="idPOD" name="POD" /></dd>
                <dt>Comments:</dt><dd><input type="text" class="k-textbox instruction" id="idComment" name="Comment" /></dd>
                <dt>&nbsp;</dt><dd><input id="btn_SaveJobTicket" type="submit" class="k-button" value="Add Job Ticket" /></dd>
            </dl>
        </div>
    </div>
</div>





<script>

    $(document).ready(function () {
        validateUploadForm();
        

    });



    function calcTotalCharge(value) {

        var inputQuantity = document.getElementById("idQuantity").value;
        if (inputQuantity == null || inputQuantity == "")
            inputQuantity = 0;
        var inputWeight = document.getElementById("idWeight").value;
        if (inputWeight == null || inputWeight == "")
            inputWeight = 0;
        var inputBasePickupCharge = document.getElementById("idBasePickupCharge").value;
        if (inputBasePickupCharge == null || inputBasePickupCharge == "")
            inputBasePickupCharge = 0;

        var inputMilage = document.getElementById("idMilage").value;
        if (inputMilage == null || inputMilage == "")
            inputMilage = 0;

        var inputToll = document.getElementById("idToll").value;
        if (inputToll == null || inputToll == "")
            inputToll = 0;

        var inputFuelSurcharge = document.getElementById("idFuelSurcharge").value;
        if (inputFuelSurcharge == null || inputFuelSurcharge == "")
            inputFuelSurcharge = 0;

        var inputMiscCharges = document.getElementById("idMiscService").value;
        if (inputMiscCharges == null || inputMiscCharges == "")
            inputMiscCharges = 0;


        var inputClient = $("#clients").data("kendoDropDownList").text();
        if (inputClient == null || inputClient == "") {
            alert("Please pick a valid client");
            //return;
        }


        var chargeParameters = {
            "InputQuantity": inputQuantity,
            "InputWeight": inputWeight,
            "InputBasePickupCharge": inputBasePickupCharge,
            "InputMilage": inputMilage,
            "InputToll": inputToll,
            "InputFuelSurcharge": inputFuelSurcharge,
            "InputMiscCharges": inputMiscCharges,
            "InputClient": inputClient,
        };

        var parms = {
            inputChargeParameters: JSON.stringify(chargeParameters)
        };




        $.ajax({
            type: "POST",
            traditional: true,
            url: '@Url.Action("CalcTotalCharge", "JobTicket")',
            async: true,
            data: parms,
            dataType: "json",
            beforeSend: function (xhr) {
                //$('#loader').show();
            },
            success: function (response, textStatus, jqXHR) {
                document.getElementById("idTotalCharge").value = response.message.Charge;
                //alert(response.message);

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Error found during execution");
            }
        });
    }



    function validateUploadForm() {


        $("#btn_SaveJobTicket").bind("click", function () {
            var validator = $("#idProductUploadForm").kendoValidator().data("kendoValidator");
            if (!validator.validate()) {
                return false;
            }
            alert("Save data here");


        });
    }

    function onSelectClientName(e) {
        //alert(e.item[0].innerText);

        var parms = {
            inputClient: e.item[0].innerText
        };


        $.ajax({
            type: "POST",
            traditional: true,
            url: '@Url.Action("GetClientDefaults", "JobTicket")',
            async: true,
            data: parms,
            dataType: "json",
            beforeSend: function (xhr) {
                //$('#loader').show();
            },
            success: function (response, textStatus, jqXHR) {
                document.getElementById("idBasePickupCharge").value = response.message.BasePickupCharge;
                //alert(response.message);

            },
            error: function (XMLHttpRequest, textStatus, errorThrown) {
                alert("Error found during execution");
            }
        });
    }
    function onSelectPickupFrom(e) {
        //alert(e.item[0].innerText);
        document.getElementById("idPickupFrom").value = e.item[0].innerText;
    }
    function onSelectDeliverTo(e) {
        //alert(e.item[0].innerText);
        document.getElementById("idDeliverTo").value = e.item[0].innerText;
    }
    function onSelectServiceType(e) {
        //alert(e.item[0].innerText);
        //document.getElementById("idPickupFrom").value = e.item[0].innerText;
    }
    function onSelectDeliveryAgent(e) {
        //alert(e.item[0].innerText);
        //document.getElementById("idPickupFrom").value = e.item[0].innerText;
    }


</script>
<style>
        .instruction{
        min-width:250px; 
        min-height:5px;
    }
        .addressArea{
        min-width:250px; 
        max-height:50px;
    }

</style>